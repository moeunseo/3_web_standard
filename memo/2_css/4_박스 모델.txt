▷ 박스 모델
	각각 요소가 어떤 원리로 웹에 배치되는지를 이해하기 위해선 박스 모델 개념 이해해야한다.
	박스 모델은 요소를 감싸고 있는 사각형 형태의 공간이며, 이 모델을 이용해 원하는 곳에 배치 가능

	> 겉에서부터 안으로 들어간다고 생각!
	1) margin: 요소의 외부 여백
	2) border: 요소의 테두리
	3) padding: 요소의 내부 여백
	4) content: 실제 내용이 채워지는 부분

▶ margin, padding
	요소의 외부, 내부 여백을 설정함으로 전체적인 요소의 배치를 설정할 수 있다.

	margin: 1 2 3 4 -> top, right, bottom, left
	margin: 10 20 -> (top, bottom), (right, left) -> 상하/좌우
	margin-top, right, bottom, left: 각각 요소에 대해 속성을 주고 싶을 때
	--> 요소와 요소 사이에 간격
	--> padding content와 content의 간격

▶ border
	요소의 테두리를 설정할 수 있다.

	border: (border-width), (border-style), (color);

	border-width: 테두리 굵기
	border-style: 테두리 스타일(solid, double, dotted 등등)

▶ content
	width, height > 높이와 너비를 설정할 수 있다.
	단, 여기에 width, heigh는 content 영역에 국한된다. 전체 요소의 너비와 길이가 아니다.
	그 이유는 전체 크기는 padding, margin, border를 합산하기 때문이다.
	여기서 해당 요소의 크기를 width, height만으로 조절하고 싶다면
	box-sizing옵션을 사용할 수 있다.
	
	box-sizing: content-box, 
	border-box(전체 크기를 width와 height로 조절할 수 있고, border까지 설정된 크기가 되면서
	content부분이 상대적으로 줄어들거나 늘어난다.)

▷ display 속성
	display 속성은 요소가 HTML문서 내에 어떻게 표시되는지를 설정할 수 있다.

	1) block: 요소가 블럭 요소처럼 동작 > 인라인 요소여도 블록 요소처럼 동작하게 할 수 있다.
	----> 블럭 요소에서만 width, height가 동작한다.
	2) inline: 요소가 인라인 요소처럼 동작
	3) inline-block: 인라인 요소 처럼 너비가 콘텐츠의 크기만큼만 차지하지만 그 외의 성격은 블록 요소의 성격을 가진다.
	4) none: 요소가 렌더링되지 않으며, 문서 레이아웃에서 완전히 제거한다.
	5) flex: 1차원 방식으로 레이아웃을 설계할 수 있고, 아이템을 유연하게 배치할 수 있다. (행)
	6) grid: 2차원 방식으로 레이아웃을 설계할 수 있고, 플렉스보다 더 폭넓게 레이아웃을 설계할 수 있다. (표)

▶ flex
	- flex container
		flex 레이아웃(display : flex;)을 적용한 요소에 의해 형성된다.

	- flex item
		플렉스 컨테이너와 자식관계를 이루는 구성 요소이다.

	- 주축: 플렉스 요소의 진행 방향
	- 교차축: 주축과 수직되는 축
		

	3_flex.html과 css는 vscode에서 확인하기

▶ grid
	1. grid container
	2. grid track
		grid 컨테이너 내에 행이나 열을 말한다.
	3. grid shell
		grid의 기본 단위로 한개의 아이템이 차지하는 공간
	4. gird line
		트랙을 구분하는 선. 레이아웃의 경계
	5. grid gap
		행과 열 사이에 간격 설정 가능

	4_grid.html에서 확인